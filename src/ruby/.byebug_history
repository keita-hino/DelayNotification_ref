c
p json[count]['dt_txt']
s
n
c
p json[count]['wind']['speed']
p json[count]['dt_txt']
c
n
c
p api.get_api['list'][0].class
p api.get_api['list'][0]
p api.get_apip api.get_api['list'][0]
p api
c
n
p result['list'][0]
p result['list'][0].class
c
v l
ed
n
c
p result['list']
p result
p result[0]
p result
n
s
n
s
n
p root_json
n
s
n
s
n
c
n
p json
n
p uri
n
p @url
s
p @url
p url
n
s
n
s
n
s
p url
n
s
n
c
s
n
s
n
p uri
n
s
n
s
n
c
p URI.parse("http://api.openweathermap.org/data/2.5/forecast?q=#{city_name},jp&units=metric&APPID=#{weather_api_key}")
p Net::HTTP.get(uri)
p URI.parse("http://api.openweathermap.org/data/2.5/forecast?q=#{city_name},jp&units=metric&APPID=#{weather_api_key}")
p uri
p @city_name
p city_name
p 
p city_name
n
s
n
c
p result
n
s
n
c
p result
n
s
n
s
n
s
n
s
p log.rain_check
p log.today
n
s
n
c
n
p init_internals
n
p self.class.define_attribute_methods
p  v
n
s
n
s
n
fin
n
s
n
s
n
s
n
s
n
p attrs
n
s
n
s
n
s
p abstract_class
p *args
s
n
s
n
s
n
p &block
p attributes
p object
n
s
n
s
n
c
p attributes
p &block
n
s
n
s
n
s
n
s
n
p attributes
s
n
s
n
c
p Evaluation.all
p Evaluation.all.to_sql
puts Evaluation.all.to_sql
: puts Evaluation.all.to_sql
n
fin
n
con
n
p  @path_to_default_spec_map
s
p path
n
s
n
c
puts Evaluation.firs
n
c
n
c
.table
puts Log.all
n
c
puts Logs.all
n
c
p Post.all
n
c
p post.all
post = Post.new
n
c
log = Logs.new
n
c
log = Log.new
n
c
log = Log.new
n
c
log = Logs.new
n
c
log.class
log = Logs.new
Logs log = Logs.new
Logs.new
n
c
n
c
p Post.all
n
c
.exit
p Evaluation.first
p Evaluation
p Evaluation.all
p Evaluation
Evaluation.connection
p Evaluation
n
exit
p Evaluation.all
n
exit
p ActiveRecord
p Evaluation.select
p Evaluation
p Evaluation.first
p Evaluation.all
p Evaluation.class
n
p ActiveRecord::Base.establish_connection
n
